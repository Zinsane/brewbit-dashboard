<div class="col-md-10 col-md-offset-1">
  <div class="panel panel-default">
    <div class="panel-heading">
      <h3 class="panel-title"><%= @temp_profile.id ? 'Edit' : 'New' %> Temperature Profile</h3>
    </div>
    <div class="panel-body">
      <%= nested_form_for @temp_profile, html: { class: 'form-horizontal' } do |f| %>
        <div class="form-group">
          <%= f.label :name, class: 'col-sm-2 control-label' %>
          <div class="col-sm-6">
            <%= f.text_field :name, class: 'form-control' %>
          </div>
        </div>

        <div class="form-group">
          <%= f.label :start_value, 'Starting Temperature', class: 'col-sm-2 control-label' %>
          <div class="col-sm-3">
            <div class="input-group">
              <%= f.text_field :start_value, class: 'form-control', value: f.object.start_value %>
              <span class="input-group-addon">&deg;<%= brewbit_current_user.temperature_scale %></span>
            </div>
          </div>
        </div>

        <table id="steps" class="table table-striped">
          <thead>
            <tr>
              <th class="col-sm-1 text-center">#</th>
              <th class="col-sm-2 text-center">Type</th>
              <th class="col-sm-1 text-center"></th>
              <th class="col-sm-2 text-center">Temperature</th>
              <th class="col-sm-1 text-center"></th>
              <th class="col-sm-3 text-center">Duration</th>
              <th class="col-sm-2 text-center"><%= f.link_to_add raw('<span class="glyphicon glyphicon-plus"></span> Add Step'), :steps, :data => { :target => "#steps" }, class: 'btn btn-default btn-sm' %></th>
            </tr>
          </thead>
          <tbody>
            <%= f.fields_for :steps, :wrapper => false do |ff| %>
              <%= render partial: 'step_form', locals: { f: ff } %>
            <% end -%>
          </tbody>
        </table>

        <div class="form-group">
          <div class="col-md-offset-8 col-md-4">
            <%= f.submit "#{@temp_profile.id ? 'Update' : 'Create'} Temperature Profile", class: 'btn btn-primary' %>
          </div>
        </div>
      <% end %>
    </div>
  </div>
</div>

<script type='text/javascript'>
  $(function() {
    // count existing nested fields after page was loaded
    num_steps = $('form .fields').length;
    toggle_remove_link();
    
    $(document).on('nested:fieldRemoved', function() {
      num_steps -= 1;
      toggle_remove_link();
      
      $(".fields:visible").each(function(index, field) {
        var index_field = $(field).find('span.step_index');
        var index_form_field = $(field).find('input.step_index');
        index_field.text( index+1 );
        index_form_field.val( index+1 );
      });
    });
  
    $(document).on('nested:fieldAdded', function(event){
      num_steps += 1;
      toggle_remove_link();
      
      var field = event.field;
      var index_field = field.find('span.step_index');
      var index_form_field = field.find('input.step_index');
      var index = $('.fields:visible').size() ;
  
      index_field.text( index );
      index_form_field.val( index );
    }) ;
  
    $(document).on( 'change', 'input[name="step_types"]', function(e){
      var val = this.value;
      var step_type_form_field = $(this).parents('td').find('input[type="hidden"]');
      var temp_hint = $(this).parents('tr').find('.temp-hint');
      var duration_hint = $(this).parents('tr').find('.duration-hint');
  
      switch(val){
        case 'hold':
          step_type_form_field.val(0);
          temp_hint.html("at");
          duration_hint.html("for");
          break;
        case 'ramp':
          step_type_form_field.val(1);
          temp_hint.html("to");
          duration_hint.html("over");
          break;
      }
    });
  
    $(document).on( 'change', 'input.duration', function(e){
      var value = $(this).val();
      var field = $(this).parents('td').find('input.duration_field');
  
      set_value( value, field);
    });
  
    $(document).on( 'click', '.dropdown-menu li a', function(){
      $(this).parents(".input-group-btn").find('.selection').text($(this).text());
      $(this).parents(".input-group-btn").find('.selection').val($(this).text());
  
      var value = $(this).text();
      var field = $(this).parents('td').find('input.duration_type_field');
  
      set_value( value, field);
    });
  
    $(document).on( 'click', '.move-row-up', function(event){
      var row = $(this).parents('tr');
      var index_form_field = row.find('input.step_index');
      var index = +index_form_field.val();
  
      if( index === 1 ){
        return ;
      }
  
      var prev_index = index - 1;
      var prev_row = row.parents('table').find('tr:visible:eq(' + prev_index + ')');
  
      swap_rows( row, prev_row );
    });
  
    $(document).on( 'click', '.move-row-down', function(event){
      var row = $(this).parents('tr');
      var index_form_field = row.find('input.step_index');
      var index = +index_form_field.val();
  
      var num_rows = row.parents('table').find('tr:visible').length
      if( index === num_rows - 1 ){
        return ;
      }
  
      var next_index = index + 1;
      var next_row = row.parents('table').find('tr:visible:eq(' + next_index + ')');
  
      swap_rows( row, next_row );
    });
  })

  var num_steps = 1;

  function toggle_remove_link() {
    $('a.remove_nested_fields').toggleClass('disabled', num_steps <= 1)
  }
  
  function set_value( value, field){
    field.val( value );
  }

  function swap_rows( row_one, row_two ){
    swap_value( row_one, row_two );
    swap_duration( row_one, row_two );
    swap_step_type( row_one, row_two );
    swap_temp_hint( row_one, row_two );
    swap_duration_hint( row_one, row_two );
  }

  function swap_value( row_one, row_two ){
    one = row_one.find('input.value').val();
    two = row_two.find('input.value').val();
    row_one.find('input.value').val(two);
    row_two.find('input.value').val(one);
  }

  function swap_duration( row_one, row_two ){
    one = row_one.find('input.duration_field').val();
    two = row_two.find('input.duration_field').val();
    row_one.find('input.duration_field').val(two);
    row_two.find('input.duration_field').val(one);
    row_one.find('input.duration').val(two);
    row_two.find('input.duration').val(one);

    swap_duration_type( row_one, row_two );
  }

  function swap_duration_type( row_one, row_two ){
    one = row_one.find('input.duration_type_field').val();
    two = row_two.find('input.duration_type_field').val();
    row_one.find('input.duration_type_field').val(two);
    row_two.find('input.duration_type_field').val(one);
    row_one.find('.selection').text(two);
    row_two.find('.selection').text(one);
  }

  function swap_step_type( row_one, row_two ){
    one = row_one.find('input.step_type').val();
    two = row_two.find('input.step_type').val();
    row_one.find('input.step_type').val(two);
    row_two.find('input.step_type').val(one);

    swap_step_type_buttons( row_one, row_two );
  }

  function swap_step_type_buttons( row_one, row_two ){
    one = row_one.find('.active').children().attr('class');
    two = row_two.find('.active').children().attr('class');
    row_one.find('.active').removeClass('active');
    row_two.find('.active').removeClass('active');
    row_one.find('.' + two).parent().addClass('active');
    row_two.find('.' + one).parent().addClass('active');
  }

  function swap_temp_hint( row_one, row_two ){
    one = row_one.find('.temp-hint').html();
    two = row_two.find('.temp-hint').html();
    row_one.find('.temp-hint').html(two);
    row_two.find('.temp-hint').html(one);
  }

  function swap_duration_hint( row_one, row_two ){
    one = row_one.find('.duration-hint').html();
    two = row_two.find('.duration-hint').html();
    row_one.find('.duration-hint').html(two);
    row_two.find('.duration-hint').html(one);
  }
</script>

